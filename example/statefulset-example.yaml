apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  namespace: cassandra-dev
  name: cassandra-dev
spec:
  serviceName: cassandra-headless-dev
  replicas: 3
  template:
    metadata:
      labels:
        app: cassandra-dev
        name: cassandra-dev
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: cassandra-dev
        image: vatit/cassandra:v1.0-dev
        imagePullPolicy: Always
        ports:
        - containerPort: 9042
          name: cql
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "PID=$(pidof java) && kill $PID && while ps -p $PID > /dev/null; do sleep 1; done"]
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-dev-0.cassandra-headless-dev.cassandra-dev.svc.cluster.local,cassandra-dev-1.cassandra-headless-dev.cassandra-dev.svc.cluster.local"
          # - name: PEER_DISCOVERY_SERVICE
          #   value: cassandra-persistence-peers
          - name: CASSANDRA_CLUSTER_NAME
            value: "CassandraDev"
          - name: CASSANDRA_DC
            value: "DC1-Dev"
          - name: CASSANDRA_RACK
            value: "Rack1-Dev"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
      # Testing mount
      # volumes:
      #   - name: cassandra-data
      #     emptyDir: {}
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "cassandra-persistence-eu-west-1a-gp2"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
